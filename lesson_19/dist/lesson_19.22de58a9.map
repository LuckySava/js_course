{"version":3,"sources":["index.js"],"names":["isAuth","name","checkAuth","promise","Promise","resolve","reject","setTimeout","then","user","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AAEA;;AAEA;;AAEA;AACE,IAAIA,SAAS,IAAb;AACA,IAAIC,OAAO,EAAX;;AAEA,SAASC,SAAT,GAAqB;AACnB,QAAIC,UAAU,IAAIC,OAAJ,CAAa,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AACjDC,mBAAW,YAAU;AAChB,aAACP,MAAF,GAAYK,SAAZ,GAAwBC,QAAxB;AACH,SAFD,EAEG,IAFH;AAGD,KAJW,CAAd;AAKE,WAAOH,OAAP;AACH;;AAEHD,UACSM,IADT,CAEQ,UAASC,IAAT,EAAe;AACXC,YAAQC,GAAR,CAAYF,KAAKR,IAAjB;AACH,CAJT,GAKQ,YAAU;AACNS,YAAQC,GAAR,CAAY,eAAZ;AACH,CAPT","file":"lesson_19.22de58a9.map","sourceRoot":"..","sourcesContent":["// Итак, мною было прочитано, прослушано и прсмотрено много информации по теме Промисов и Коллбеков. В целом понимание что такое коллбеки, благодаря разным примерам пришло. Как и следствие коллбеков, понимаю зачем ввели в новом стандарте Промисы, чтобы не было \"перенасыщением\" коллбеками, тоже понятно.\r\n\r\n// Промисы, принимают два аргумента, и возвращают в зависимости от условий или первый как \"выполнено\" или второй как \"невыполнено\"\r\n\r\n// Далее есть методы (.then) которые подхватывает наш промис и в зависимости от результата, либо идут по цепочке далее, либо .catch срабатывает (\"ошибка\").\r\n\r\n//!!!!! Есть трудность в понимаю \"как правильно записать и оформить\"!!!\r\n\r\n// -----------------------------------------------------------------------\r\n  let isAuth = true;\r\n  let name = \"\";\r\n\r\n  function checkAuth() {\r\n    let promise = new Promise (function(resolve, reject) {\r\n        setTimeout(function(){\r\n            (!isAuth) ? resolve() : reject()\r\n        }, 2000)\r\n      });\r\n      return promise;\r\n  };\r\n\r\ncheckAuth\r\n        .then(\r\n        function(user) { \r\n            console.log(user.name);\r\n        }),\r\n        function(){\r\n            console.log(\"name: + 'Max'\")\r\n        };\r\n"]}